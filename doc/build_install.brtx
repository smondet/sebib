{header|{title|Build & Install Sebib}}

{section 1 sec:dependencies|Dependencies}

Sebib is written in the wonderful {link http://caml.inria.fr
|Objective Caml} language and depends on 3 libraries (as {i|findlib}
packages):
{begin list}
{*}
{link http://code.google.com/p/ocaml-extlib/
|ExtLib},
{*} {t|pcre}
{link http://www.ocaml.info/home/ocaml_sources.html
|OCaml-PCRE},
{*} and
{link http://www.janestreet.com/ocaml/index.html
|Sexplib}
(we use only {t|sexplib.core}, no Camlp4).
{end} {p}

The build process is handled with {link http://omake.metaprl.org/
|OMake}, but, if you do not have it, you can at least {link
local:sec:noomake |build the application} directly. {p}

To generate the documentation, you will need {i|OCamldoc} and {link
http://bracetax.berlios.de |Bracetax} (the {t|brtx} tool, you do not
need the library).

{section 1 sec:omake|Use OMake}

Just by typing:
{code}
omake
{end}
should check the libraries, and compile everything. {p}

You have then these executable binaries:
{list|
{*} {t|_build/app/sebib.run},
{*} and preferably, {t|_build/app/sebib.opt} (if your architecture
does not support native compilation you won't have this one).  }
Move and rename one of them to somewhere in your {t|$PATH}, and you
have installed the application. {p}

To install the library, just do:
{code}
omake install_library
{end}
This will install the {t|sebib} library using {i|findlib}, depending
on your OCaml setup this may require {t|root} privileges. {p}

Other OMake targets may be useful: {t|doc_site}, {t|doc_library},
{t|web_site}, or {t|clean}.

{section 1 sec:noomake|Without OMake}

If you do not have OMake you can get easily the {t|sebib} application
compiled, just run this command:
{code}
ocamlfind ocamlopt -package extlib,pcre,sexplib.core -linkpkg \
          src/lib/sebib_Yaboon_PolyComp.ml \
          src/lib/sebib_std.ml src/lib/sebib_sanitize.ml src/lib/sebib.ml \
          src/app/sebib_main.ml -I . -I src/lib -o sebib
{end}
